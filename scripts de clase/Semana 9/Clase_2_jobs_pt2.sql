
--CREAR UN CAMPO DE IMPUESTOS EN LA TABLA DE ORDER_ITEMS
ALTER TABLE ORDER_ITEMS ADD (
    IMPUESTO NUMBER(10,2) DEFAULT NULL
);


--PROCEDIMIENTO ALMACENADO CON PARAMETROS QUE SE USARA EN EL JOB
CREATE OR REPLACE PROCEDURE SP_CALCULA_IMPUESTO(
    VALOR_IMP NUMBER,
    PROD_ACTUALIZAR NUMBER
)
IS
BEGIN
    IF (PROD_ACTUALIZAR = 0) THEN
        UPDATE ORDER_ITEMS 
        SET IMPUESTO = (QUANTITY*LIST_PRICE)*VALOR_IMP 
        WHERE IMPUESTO = 0 OR IMPUESTO IS NULL;
        
        COMMIT;

    ELSIF (PROD_ACTUALIZAR = 1) THEN
        UPDATE ORDER_ITEMS 
        SET IMPUESTO = (QUANTITY * LIST_PRICE) * VALOR_IMP ;

        COMMIT;

    END IF;
END;

-- CREAR JOB DESACTIVADO
BEGIN
    DBMS_SCHEDULER.CREATE_JOB(
        JOB_NAME => 'JOB_ACTUALIZA_IMPUESTO',
        JOB_TYPE => 'STORED_PROCEDURE',
        JOB_ACTION => 'SP_CALCULA_IMPUESTO',
        NUMBER_OF_ARGUMENTS => 2,
        START_DATE => TO_TIMESTAMP('2021-04-23 09:30:00', 'YYYY-MM-DD HH24:MI:SS' ),
        REPEAT_INTERVAL => 'FREQ=MONTHLY; BYMONTHDAY=1; BYHOUR=10; BYMINUTE=0; BYSECOND=0',
        ENABLED => FALSE
    );
END;


--ARGUMENTOS DEL JOB
BEGIN
    DBMS_SCHEDULER.SET_JOB_ARGUMENT_VALUE(
        JOB_NAME => 'JOB_ACTUALIZA_IMPUESTO',
        ARGUMENT_POSITION => 1,
        ARGUMENT_VALUE => 0.15
    );

    DBMS_SCHEDULER.SET_JOB_ARGUMENT_VALUE(
        JOB_NAME => 'JOB_ACTUALIZA_IMPUESTO',
        ARGUMENT_POSITION => 2,
        ARGUMENT_VALUE => 1
    );
END;

--ACTIVAR JOB
BEGIN
    DBMS_SCHEDULER.ENABLE('JOB_ACTUALIZA_IMPUESTO');
END;

