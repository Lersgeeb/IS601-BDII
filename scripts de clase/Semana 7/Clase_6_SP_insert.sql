SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE SP_INSERTA_PRODUCTO(
    NOMB_PROD VARCHAR2,
    ID_BRAND NUMBER,
    CAT_ID NUMBER, 
    ANIO_MODELO NUMBER,
    PRECIO NUMBER,
    MSJ_ERROR OUT VARCHAR2,
    MSJ_EXITO OUT VARCHAR2
)
IS
    VAL_MAX_PROD_ID NUMBER;
BEGIN
    SELECT ( MAX(PRODUCT_ID) + 1 ) 
    INTO VAL_MAX_PROD_ID 
    FROM PRODUCTS;

    INSERT INTO PRODUCTS 
    VALUES (
        VAL_MAX_PROD_ID,
        NOMB_PROD,
        ID_BRAND,
        CAT_ID,
        ANIO_MODELO,
        PRECIO
    );

    COMMIT;
    MSJ_EXITO := 'LA INSERCION DEL PRODUCTO FUE EXITOSA';


    EXCEPTION
        WHEN OTHERS THEN
            MSJ_ERROR:=SQLERRM;
END;


--EJECUTAR SP--
DECLARE
    MSJ_ERROR VARCHAR2(500);
    MSJ_EXITO VARCHAR2(500);
BEGIN
    SP_INSERTA_PRODUCTO(
        'BICICLETA DE MONTANIA',
        1,
        4,
        2019,
        4345,
        MSJ_ERROR,
        MSJ_EXITO
    );
    DBMS_OUTPUT.PUT_LINE( MSJ_EXITO || ' ' || MSJ_ERROR );
END;


--- SP CON SECUENCIA Y TRIGGER ---

CREATE SEQUENCE SQ_PRODUCTS
START WITH 323
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TG_SQ_PRODUCTS
BEFORE INSERT ON PRODUCTS
FOR EACH ROW
DECLARE
BEGIN 
    :NEW.PRODUCT_ID:=SQ_PRODUCTS.NEXTVAL;
END;

-- CAMBIO DEL SP
CREATE OR REPLACE PROCEDURE SP_INSERTA_PRODUCTO(
    NOMB_PROD VARCHAR2,
    ID_BRAND NUMBER,
    CAT_ID NUMBER, 
    ANIO_MODELO NUMBER,
    PRECIO NUMBER,
    MSJ_ERROR OUT VARCHAR2,
    MSJ_EXITO OUT VARCHAR2
)
IS
BEGIN
    INSERT INTO PRODUCTS 
    (
        PRODUCT_NAME,
        BRAND_ID,
        CATEGORY_ID,
        MODEL_YEAR,
        LIST_PRICE
    )
    VALUES (
        NOMB_PROD,
        ID_BRAND,
        CAT_ID,
        ANIO_MODELO,
        PRECIO
    );

    COMMIT;
    MSJ_EXITO := 'LA INSERCION DEL PRODUCTO FUE EXITOSA';


    EXCEPTION
        WHEN OTHERS THEN
            MSJ_ERROR:=SQLERRM;
END;